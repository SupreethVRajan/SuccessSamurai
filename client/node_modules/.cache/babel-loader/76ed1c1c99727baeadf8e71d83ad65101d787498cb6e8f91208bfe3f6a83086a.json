{"ast":null,"code":"var _jsxFileName = \"/home/supreeth/SuccessSamurai/client/src/Context/index.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext([{\n  data: null,\n  error: null,\n  loading: true\n}, () => {}]);\nconst UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({\n    data: null,\n    error: null,\n    loading: true\n  });\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    axios.defaults.headers.common[\"authorization\"] = `Bearer ${token}`;\n  }\n  const fetchUser = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/auth/me\");\n    console.log(data);\n  };\n  useEffect(() => {\n    fetchUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: [user, setUser],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n_s(UserProvider, \"Z14ZeIoKq/hc+s027Q7xMy1s7xk=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","UserContext","data","error","loading","UserProvider","_ref","_s","children","user","setUser","token","localStorage","getItem","defaults","headers","common","fetchUser","get","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/supreeth/SuccessSamurai/client/src/Context/index.tsx"],"sourcesContent":["import {createContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\ninterface User {\n    data: {\n        id: string;\n        email: string;\n    } | null\n    error: string | null\n    loading: boolean\n}\n\nconst UserContext = createContext<\n    [User, React.Dispatch<React.SetStateAction<User>>]\n> ([\n    {\n        data: null,\n        error: null,\n        loading: true\n    }, () => {}\n])\n\nconst UserProvider = ({children}: any) => {\n    const [user, setUser] = useState<User>({\n        data: null,\n        error: null,\n        loading: true\n    });\n\n    const token = localStorage.getItem(\"token\")\n\n    if (token) {\n        axios.defaults.headers.common[\"authorization\"] = `Bearer ${token}`\n    }\n\n    const fetchUser = async () => {\n        const {data} =await axios.get(\"http://localhost:5000/auth/me\");\n\n        console.log(data);\n    }\n\n    useEffect(() => {\n        fetchUser();\n    }, [])\n\n    return <UserContext.Provider value={[user, setUser]}>\n        {children}\n    </UserContext.Provider>\n};\n\nexport {UserContext, UserProvider};"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,MAAMC,WAAW,gBAAGN,aAAa,CAE9B,CACC;EACIO,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACb,CAAC,EAAE,MAAM,CAAC,CAAC,CACd,CAAC;AAEF,MAAMC,YAAY,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAACC;EAAa,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAO;IACnCK,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAIF,KAAK,EAAE;IACPb,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASL,KAAM,EAAC;EACtE;EAEA,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM;MAACf;IAAI,CAAC,GAAE,MAAMJ,KAAK,CAACoB,GAAG,CAAC,+BAA+B,CAAC;IAE9DC,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC;EACrB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACZqB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOjB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE,CAACb,IAAI,EAAEC,OAAO,CAAE;IAAAF,QAAA,EAC/CA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAC3B,CAAC;AAACnB,EAAA,CA1BIF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA4BlB,SAAQJ,WAAW,EAAEI,YAAY;AAAE,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}